# docker-compose.yml
# ✅ Uses project root (.) as build context for all services
# ✅ Fixes "../libs not found" issue
# ✅ Keeps MySQL + Kafka health checks and dependencies

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - ticketing-network
    healthcheck:
      test: echo stat | nc localhost 2181
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    depends_on:
      zookeeper:
        condition: service_healthy
    networks:
      - ticketing-network
    healthcheck:
      test: kafka-broker-api-versions --bootstrap-server localhost:9092
      interval: 10s
      timeout: 10s
      retries: 5

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: muddysituation
      MYSQL_DATABASE: ticketingdb
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - ticketing-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-pmuddysituation"]
      interval: 10s
      timeout: 5s
      retries: 5

  passenger_service:
    build:
      context: .
      dockerfile: passenger_service/Dockerfile
    container_name: passenger_service
    ports:
      - "8081:8081"
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      HOST: mysql
      DATABASE: ticketingdb
      USER: root
      PASSWORD: muddysituation
      PORT: 3306
    networks:
      - ticketing-network
    restart: on-failure

  transport_service:
    build:
      context: .
      dockerfile: transport_service/Dockerfile
    container_name: transport_service
    ports:
      - "8082:8082"
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      HOST: mysql
      DATABASE: ticketingdb
      USER: root
      PASSWORD: muddysituation
      PORT: 3306
      KAFKA_BOOTSTRAP: kafka:9092
    networks:
      - ticketing-network
    restart: on-failure

  ticketing_service:
    build:
      context: .
      dockerfile: ticketing_service/Dockerfile
    container_name: ticketing_service
    ports:
      - "8083:8083"
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      HOST: mysql
      DATABASE: ticketingdb
      USER: root
      PASSWORD: muddysituation
      PORT: 3306
      KAFKA_BOOTSTRAP: kafka:9092
    networks:
      - ticketing-network
    restart: on-failure

  payment_service:
    build:
      context: .
      dockerfile: payment_service/Dockerfile
    container_name: payment_service
    ports:
      - "8084:8084"
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      HOST: mysql
      DATABASE: ticketingdb
      USER: root
      PASSWORD: muddysituation
      PORT: 3306
      KAFKA_BOOTSTRAP: kafka:9092
    networks:
      - ticketing-network
    restart: on-failure

  notification_service:
    build:
      context: .
      dockerfile: notification_service/Dockerfile
    container_name: notification_service
    ports:
      - "8085:8085"
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      HOST: mysql
      DATABASE: ticketingdb
      USER: root
      PASSWORD: muddysituation
      PORT: 3306
      KAFKA_BOOTSTRAP: kafka:9092
    networks:
      - ticketing-network
    restart: on-failure

  admin_service:
    build:
      context: .
      dockerfile: admin_service/Dockerfile
    container_name: admin_service
    ports:
      - "8086:8086"
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      HOST: mysql
      DATABASE: ticketingdb
      USER: root
      PASSWORD: muddysituation
      PORT: 3306
      KAFKA_BOOTSTRAP: kafka:9092
    networks:
      - ticketing-network
    restart: on-failure

volumes:
  mysql_data:

networks:
  ticketing-network:
    driver: bridge

